contract MemeVote = 

    record meme = {
      creatorAddress: address,
      voteCount: int,
      name: string,
      url: string
      }
    
    record state = { 
      memes: map(int, meme),
      memesLength: int
      }

    entrypoint init() = { 
      memes = {},
      memesLength = 0
      }

    entrypoint getMeme(index: int): meme = 
      switch(Map.lookup(index, state.memes))
        None => abort("Index not found")
        Some(y) => y
    
    stateful entrypoint setMeme(memeUrl: string, uname: string) =
      let meme = { creatorAddress = Call.caller, name = uname, url = memeUrl, voteCount = 0}
      let id = getMemesLength() + 1
      put(state { memes[id] = meme, memesLength = id} )
    

    entrypoint getMemesLength(): int =
      state.memesLength
    
    stateful entrypoint voteMeme(index: int) = 
      let meme = getMeme(index)
      Chain.spend(meme.creatorAddress, Call.value)
      let updatedVoteCount = meme.voteCount + Call.value
      let updatedMemes = state.memes{ [index].voteCount = updatedVoteCount }
      put(state { memes = updatedMemes })
